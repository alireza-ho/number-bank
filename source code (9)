/******************************************************************************

Welcome to GDB Online.
  GDB online is an online compiler and debugger tool for C, C++, Python, PHP, Ruby, 
  C#, OCaml, VB, Perl, Swift, Prolog, Javascript, Pascal, COBOL, HTML, CSS, JS
  Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
class Time:
    def __init__(self, hour=0, minute=0, second=0):
        self.hour = hour
        self.minute = minute
        self.second = second

        self.validate_time()

    def validate_time(self):
        if not (0 <= self.hour < 24):
            raise ValueError("Hour must be between 0 and 23.")
        if not (0 <= self.minute < 60):
            raise ValueError("Minute must be between 0 and 59.")
        if not (0 <= self.second < 60):
            raise ValueError("Second must be between 0 and 59.")

    def __str__(self):
        return f"{self.hour:02}:{self.minute:02}:{self.second:02}"

    def diff_seconds(self, other_time):
        total_seconds_self = self.hour * 3600 + self.minute * 60 + self.second
        total_seconds_other = other_time.hour * 3600 + other_time.minute * 60 + other_time.second
        return abs(total_seconds_self - total_seconds_other)

    @classmethod
    def from_seconds(cls, total_seconds):
        hour = total_seconds // 3600
        total_seconds %= 3600
        minute = total_seconds // 60
        second = total_seconds % 60
        return cls(hour, minute, second)


if __name__ == "__main__":
    try:
        t1 = Time(10, 30, 45)
        print("Time t1:", t1)  # Print time in HH:MM:SS format

        t2 = Time(5, 15, 20)
        print("Time t2:", t2)

        difference = t1.diff_seconds(t2)
        print("Difference in seconds:", difference)

        t3 = Time.from_seconds(5000)
        print("Time t3 from seconds:", t3)
        
    except ValueError as e:
        print(f"Error: {e}")